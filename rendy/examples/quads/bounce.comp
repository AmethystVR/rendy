#version 450

layout(local_size_x = 64, local_size_y = 64, local_size_z = 64) in;
layout(set = 0, binding = 1, rgba32f) uniform imageBuffer vecposbuff;

void main() {
  int index = int(gl_GlobalInvocationIndex.x) + 1024 * int(gl_GlobalInvocationIndex.y);
  float delta_time = 0.01;
  vec4 vecpos = imageLoad(vecposbuff, index);
  vec2 pos = vecpos.rg;
  vec2 vel = vecpos.ba;
  pos += vel + (delta_time * delta_time) / 2;
  vel += delta_time;
  float l = sign(pos.x);
  float r = sign(1.0 - pos.x);
  pos.x = 2.0 + r * l * pos.x - 2.0 * r;
  vel.x = 2.0 + r * l * vel.x - 2.0 * r;
  float b = sign(pos.y);
  float t = sign(1.0 - pos.y);
  pos.y = 2.0 + t * b * pos.y - 2.0 * t;
  vel.y = 2.0 + t * b * vel.y - 2.0 * t;
  imageStore(vecposbuff, index, vec4(pos, vel));
}
